<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.canary.finance.orm.ProductDao">
 <resultMap type="Product" id="resultMap">
  <id column="id" property="id" jdbcType="INTEGER"/>
  <result column="name" property="name" jdbcType="VARCHAR"/>
  <result column="label" property="label" jdbcType="VARCHAR"/>
  <result column="year_income" property="yearIncome" jdbcType="DOUBLE"/> 
  <result column="total_amount" property="totalAmount" jdbcType="INTEGER"/>
  <result column="actual_amount" property="actualAmount" jdbcType="INTEGER"/>
  <result column="finance_period" property="financePeriod" jdbcType="INTEGER"/>
  <result column="repayment" property="repayment" jdbcType="TINYINT"/>
  <result column="lowest_money" property="lowestMoney" jdbcType="INTEGER"/>
  <result column="payback" property="payback" jdbcType="INTEGER"/>
  <result column="highest_money" property="highestMoney" jdbcType="INTEGER"/>
  <result column="increase_interest" property="increaseInterest" jdbcType="DOUBLE"/>
  <result column="loan_year_income" property="loanYearIncome" jdbcType="DOUBLE"/>
  <result column="raised_time" property="raisedTime" jdbcType="TIMESTAMP"/>
  <result column="interest_date" property="interestDate" jdbcType="DATE"/>
  <result column="summary" property="summary" jdbcType="LONGVARCHAR"/>
  <result column="risk" property="risk" jdbcType="LONGVARCHAR"/>
  <result column="attachment" property="attachment" jdbcType="LONGVARCHAR"/>
  <result column="sorting" property="sorting" jdbcType="SMALLINT"/>
  <result column="status" property="status" jdbcType="TINYINT"/>
  <association property="category" javaType="ProductCategory">
    	<id column="category_id" property="id" jdbcType="INTEGER" />
    	<result column="category_property" property="property" jdbcType="VARCHAR"/>
    	<result column="category_name" property="name" jdbcType="VARCHAR" />
  </association>
  <association property="merchant" javaType="Merchant">
     <id column="merchant_id" property="id" jdbcType="INTEGER" />
     <result column="merchant_name" property="name" jdbcType="VARCHAR" />
  </association>
 </resultMap>
 <sql id="columns">
   p.id, p.name, p.label, p.year_income, p.payback, p.total_amount, p.actual_amount, p.finance_period, p.repayment, p.lowest_money, p.highest_money, p.increase_interest, p.loan_year_income,
   p.raised_time, p.interest_date, p.summary, p.risk, p.attachment, p.sorting, p.status, p.category_id, c.name category_name, c.property category_property, p.merchant_id, m.name merchant_name
 </sql>
 <select id="queryForList" resultMap="resultMap">
   select <include refid="columns"/> from product p 
   left join product_category c on p.category_id = c.id  
   left join merchant m on p.merchant_id = m.id
   <where>
  	  <if test="name != null">
   	   and p.name like '${name}%'
      </if>
      <if test="categoryId > 0">
        and p.category_id = #{categoryId}
      </if>
      <if test="merchantId > 0">
        and p.merchant_id = #{merchantId}
      </if>
      <if test="periodStart > 0 and periodEnd >= periodStart">
	  	<![CDATA[ and p.finance_period >= #{periodStart} and p.finance_period <= #{periodEnd}]]>
	  </if>
   </where>
    <![CDATA[
		order by
		IF((p.status =1 and p.raised_time > NOW()),1,IF((p.status =1 and p.raised_time <= NOW() and (p.actual_amount < p.total_amount)),0,2)),            
		IF((p.status =1 and  p.actual_amount < p.total_amount), p.sorting, false) desc,  
		p.raised_time desc, p.id desc
   	]]>
	<choose>
	  <when test="offset > 0 and size > 0">
	     <![CDATA[
	     limit #{offset}, #{size}
	     ]]>
	  </when>
	  <when test="size > 0">
	     <![CDATA[
	     limit 0, #{size}
	     ]]>
	  </when>
	  <otherwise>
	  <![CDATA[
	   limit 0, 15
	  ]]>
	  </otherwise>
	</choose>
 </select>
 <select id="queryForCount" resultType="int">
   select count(*) from product p 
   left join product_category c on p.category_id = c.id  
   left join merchant m on p.merchant_id = m.id
   <where>
  	  <if test="name != null">
   	   and p.name like '${name}%'
      </if>
      <if test="categoryId > 0">
        and p.category_id = #{categoryId}
      </if>
      <if test="merchantId > 0">
        and p.merchant_id = #{merchantId}
      </if>
      <if test="periodStart > 0 and periodEnd >= periodStart">
	  	<![CDATA[ and p.finance_period >= #{periodStart} and p.finance_period <= #{periodEnd}]]>
	  </if>
   </where> 
 </select>
 <select id="queryLoanForList" resultMap="resultMap">
   select <include refid="columns"/> 
   from product p 
   left join product_category c on p.category_id = c.id  
   left join merchant m on p.merchant_id = m.id
   <where>
   	  p.interest_date is not null
  	  <if test="name != null">
   	   and p.name like '${name}%'
      </if>
      <if test="merchantId > 0">
        and p.merchant_id = #{merchantId}
      </if>
      <if test="loanStatus > -1">
        and p.payback = #{loanStatus}
      </if>
      <if test="startDate != null and endDate != null">
	  	<![CDATA[ and p.interest_date >= #{startDate} and p.interest_date <= #{endDate}]]>
	  </if>
   </where>
    order by p.interest_date, p.id desc
	<choose>
	  <when test="offset > 0 and size > 0">
	     <![CDATA[
	     limit #{offset}, #{size}
	     ]]>
	  </when>
	  <when test="size > 0">
	     <![CDATA[
	     limit 0, #{size}
	     ]]>
	  </when>
	  <otherwise>
	  <![CDATA[
	   limit 0, 15
	  ]]>
	  </otherwise>
	</choose>
 </select>
 <select id="queryLoanForCount" resultType="int">
   select count(*) 
   from product p 
   left join merchant m on p.merchant_id = m.id
   <where>
   	  p.interest_date is not null
  	  <if test="name != null">
   	   and p.name like '${name}%'
      </if>
      <if test="merchantId > 0">
        and p.merchant_id = #{merchantId}
      </if>
      <if test="loanStatus > -1">
        and p.payback = #{loanStatus}
      </if>
      <if test="startDate != null and endDate != null">
	  	<![CDATA[ and p.interest_date >= #{startDate} and p.interest_date <= #{endDate}]]>
	  </if>
   </where> 
 </select>
 <select id="queryPaybackForList" resultType="PaybackOrderVO">
 	select pt.id productId, pt.name productName, pt.merchantName, 
		sum(cor.principal+ROUND(cor.principal*pt.loan_year_income*pt.finance_period/36500,2)+ROUND(cor.principal*pt.year_income*pt.finance_period/36500,2)) paybackAmount,
		sum(ROUND(cor.principal*pt.increase_interest*pt.finance_period/36500,2)) interestAmount,
		sum(cor.coupon_amount) couponAmount,
		DATE_ADD(pt.interest_date, INTERVAL pt.finance_period DAY) paybackDate, if (pt.payback = 0 or pt.payback = 1, if(DATE_ADD(pt.interest_date, INTERVAL pt.finance_period DAY) > CURRENT_DATE(), 0, 1) , pt.payback)
		 payback
 	from (select p.*, m.name merchantName
	   from product p 
	   left join merchant m on p.merchant_id = m.id
	   <where>
	   	  p.interest_date is not null
	  	  <if test="name != null">
	   	   and p.name like '${name}%'
	      </if>
	      <if test="merchantId > 0">
	        and p.merchant_id = #{merchantId}
	      </if>
	   	  <if test="loanStatus == 0">
	    	  and DATE_ADD(p.interest_date, INTERVAL p.finance_period DAY) > CURRENT_DATE() and p.payback in (0, 1)
	      </if>
	    	<if test="loanStatus == 1">
	    	  and CURRENT_DATE() >= DATE_ADD(p.interest_date, INTERVAL p.finance_period DAY) and p.payback in (0, 1)
	    	</if>
	    	<if test="loanStatus > 1">
	    	  and p.payback = #{loanStatus}
	    	</if>
		  <if test="startDate != null and endDate != null">
		  	<![CDATA[ and DATE_ADD(p.interest_date, INTERVAL p.finance_period DAY) >= #{startDate} and DATE_ADD(p.interest_date, INTERVAL p.finance_period DAY) <= #{endDate}]]>
		  </if>
	   </where>
	    order by DATE_ADD(p.interest_date, INTERVAL p.finance_period DAY), p.id desc
		<choose>
		  <when test="offset > 0 and size > 0">
		     <![CDATA[
		     limit #{offset}, #{size}
		     ]]>
		  </when>
		  <when test="size > 0">
		     <![CDATA[
		     limit 0, #{size}
		     ]]>
		  </when>
		  <otherwise>
		  <![CDATA[
		   limit 0, 15
		  ]]>
		  </otherwise>
		</choose>) pt
	left join customer_order cor on cor.product_id = pt.id
	group by cor.product_id
 </select>
 <select id="queryPaybackForCount" resultType="int">
   select count(*) 
   from product p 
   left join merchant m on p.merchant_id = m.id
   <where>
   	  p.interest_date is not null
  	  <if test="name != null">
   	   and p.name like '${name}%'
      </if>
      <if test="merchantId > 0">
        and p.merchant_id = #{merchantId}
      </if>
   	  <if test="loanStatus == 0">
   	    and DATE_ADD(p.interest_date, INTERVAL p.finance_period DAY) > CURRENT_DATE() and p.payback in (0, 1)
   	  </if>
   	  <if test="loanStatus == 1">
   	    and CURRENT_DATE() >= DATE_ADD(p.interest_date, INTERVAL p.finance_period DAY) and p.payback in (0, 1)
   	  </if>
   	  <if test="loanStatus > 1">
   	    and p.payback = #{loanStatus}
   	  </if>
	  <if test="startDate != null and endDate != null">
	  	<![CDATA[ and DATE_ADD(p.interest_date, INTERVAL p.finance_period DAY) >= #{startDate} and DATE_ADD(p.interest_date, INTERVAL p.finance_period DAY) <= #{endDate}]]>
	  </if>
   </where> 
 </select>
 <select id="selectById" parameterType="int" resultMap="resultMap">
   select <include refid="columns"/> from product p 
   left join product_category c on p.category_id = c.id  
   left join merchant m on p.merchant_id = m.id
   where p.id = #{id} 
 </select>
 <select id="selectByName" resultMap="resultMap">
   select <include refid="columns"/> from product p 
   left join product_category c on p.category_id = c.id  
   left join merchant m on p.merchant_id = m.id
   where p.name = #{name}
 </select>
 <insert id="insert"  parameterType="Product" useGeneratedKeys="true" keyProperty="id">
    insert into product
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="name != null" >
        name,
      </if>
      <if test="label != null">
        label,
      </if>
      <if test="yearIncome > 0" >
        year_income,
      </if>
      <if test="totalAmount > 0" >
        total_amount,
      </if>
      <if test="actualAmount > 0" >
        actual_amount,
      </if>
      <if test="financePeriod > 0 ">
      	finance_period,
      </if>
      <if test="repayment >= 0">
        repayment,
      </if>
      <if test="lowestMoney > 0">
        lowest_money,
      </if>
      <if test="highestMoney > 0">
        highest_money,
      </if>
      <if test="increaseInterest > 0" >
        increase_interest,
      </if>
      <if test="loanYearIncome > 0" >
        loan_year_income,
      </if>
      <if test="raisedTime != null">
        raised_time,
      </if>
      <if test="interestDate != null">
        interest_date,
      </if>
      <if test="summary != null">
        summary,
      </if>
      <if test="risk != null">
        risk,
      </if>
      <if test="attachment != null">
        attachment,
      </if>
      <if test="sorting > 0">
        sorting,
      </if>
      <if test="category != null and category.id > 0 " >
        category_id,
      </if>
      <if test="merchant != null and merchant.id > 0">
        merchant_id,  
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="label != null">
        #{label,jdbcType=VARCHAR},
      </if>
      <if test="yearIncome > 0" >
        #{yearIncome,jdbcType=DOUBLE},
      </if>
      <if test="totalAmount > 0" >
        #{totalAmount,jdbcType=INTEGER},
      </if>
      <if test="actualAmount > 0" >
        #{actualAmount,jdbcType=INTEGER},
      </if>
      <if test="financePeriod > 0">
      	#{financePeriod,jdbcType=INTEGER},
      </if>
      <if test="repayment >= 0">
        #{repayment,jdbcType=TINYINT},
      </if>
      <if test="lowestMoney > 0">
        #{lowestMoney,jdbcType=INTEGER},
      </if>
       <if test="highestMoney > 0">
        #{highestMoney,jdbcType=INTEGER},
      </if>
      <if test="increaseInterest > 0" >
        #{increaseInterest,jdbcType=DOUBLE},
      </if>
      <if test="loanYearIncome > 0" >
        #{loanYearIncome,jdbcType=DOUBLE},
      </if>
      <if test="raisedTime != null">
        #{raisedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="interestDate != null">
        #{interestDate,jdbcType=DATE},
      </if>
      <if test="summary != null">
        #{summary,jdbcType=VARCHAR},
      </if>
      <if test="risk != null">
        #{risk,jdbcType=VARCHAR},
      </if>
      <if test="attachment != null">
        #{attachment,jdbcType=VARCHAR},
      </if>
      <if test="sorting > 0" >
        #{sorting,jdbcType=SMALLINT},
      </if>
      <if test="category != null and category.id >0 " >
        #{category.id,jdbcType=INTEGER},
      </if>
      <if test="merchant != null and merchant.id > 0">
        #{merchant.id,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
 <update id="update" parameterType="Product" >
    update product
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="label != null">
        label = #{label,jdbcType=VARCHAR},
      </if>
      <if test="yearIncome > 0" >
        year_income = #{yearIncome,jdbcType=DOUBLE},
      </if>
      <if test="totalAmount > 0" >
        total_amount = #{totalAmount,jdbcType=INTEGER},
      </if>
      <if test="actualAmount > 0" >
        actual_amount = #{actualAmount,jdbcType=INTEGER},
      </if>
      <if test="financePeriod > 0">
      	finance_period = #{financePeriod,jdbcType=INTEGER},
      </if>
      <if test="repayment >= 0">
        repayment = #{repayment,jdbcType=TINYINT},
      </if>
      <if test="lowestMoney > 0">
        lowest_money = #{lowestMoney,jdbcType=INTEGER},
      </if>
       <if test="highestMoney > 0">
        highest_money = #{highestMoney,jdbcType=INTEGER},
      </if>
      <if test="increaseInterest >= 0" >
        increase_interest = #{increaseInterest,jdbcType=DOUBLE},
      </if>
      <if test="loanYearIncome > 0" >
        loan_year_income = #{loanYearIncome,jdbcType=DOUBLE},
      </if>
      <if test="raisedTime != null">
        raised_time = #{raisedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="interestDate != null">
        interest_date = #{interestDate,jdbcType=DATE},
      </if>
      <if test="summary != null">
        summary = #{summary,jdbcType=VARCHAR},
      </if>
      <if test="risk != null">
        risk = #{risk,jdbcType=VARCHAR},
      </if>
      <if test="attachment != null">
        attachment = #{attachment,jdbcType=VARCHAR},
      </if>
      <if test="sorting > 0">
        sorting = #{sorting,jdbcType=SMALLINT},
      </if>
      <if test="status >= 0">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="category != null and category.id >0 " >
        category_id = #{category.id,jdbcType=INTEGER},
      </if>
      <if test="merchant != null and merchant.id > 0">
        merchant_id = #{merchant.id,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updatePayback" >
    update product set payback = #{payback}
    where id = #{productId,jdbcType=INTEGER}
  </update>
</mapper>